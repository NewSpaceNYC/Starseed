# Generated by Django 3.1.7 on 2021-02-28 01:29

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessDataPointType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_datapoint_type_name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='ConnectionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('connection_name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('url', models.CharField(max_length=255)),
                ('twitter_uid', models.CharField(max_length=255)),
                ('twitter_nickname', models.CharField(max_length=255)),
                ('facebook_url', models.CharField(max_length=255)),
                ('linkedin_url', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('bio', models.TextField()),
                ('created_at', models.DateField()),
                ('updated_at', models.DateField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Need',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('need', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('entity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='starseed.entity')),
                ('founding_date', models.DateField()),
            ],
            bases=('starseed.entity',),
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('entity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='starseed.entity')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('birthdate', models.DateField()),
                ('avatar_url', models.CharField(max_length=255)),
            ],
            bases=('starseed.entity',),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('entity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='starseed.entity')),
                ('username', models.CharField(max_length=255)),
                ('encrypted_password', models.CharField(max_length=255)),
                ('reset_password_token', models.CharField(max_length=255)),
                ('reset_password_sent_at', models.DateField()),
                ('remember_created_at', models.DateField()),
                ('sign_in_count', models.IntegerField()),
                ('current_sign_in_at', models.DateField()),
                ('last_sign_in_at', models.DateField(max_length=255)),
                ('current_sign_in_ip', models.GenericIPAddressField()),
                ('last_sign_in_ip', models.GenericIPAddressField()),
                ('confirmation_sent_at', models.DateField()),
                ('confirmed_at', models.DateField()),
                ('confirmation_token', models.CharField(max_length=255)),
                ('unconfirmed_email', models.EmailField(max_length=255)),
                ('authentication_token', models.TextField()),
                ('mail_preference', models.CharField(max_length=255)),
                ('github_uid', models.IntegerField()),
                ('github_login', models.CharField(max_length=255)),
                ('personal_email_sent_on', models.DateField()),
                ('from_date', models.DateField()),
                ('thru_date', models.DateField()),
            ],
        ),
        migrations.AddField(
            model_name='entity',
            name='needs',
            field=models.ManyToManyField(to='starseed.Need'),
        ),
        migrations.AddField(
            model_name='entity',
            name='skills',
            field=models.ManyToManyField(to='starseed.Skill'),
        ),
        migrations.AddField(
            model_name='entity',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.CreateModel(
            name='Connection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_object_id', models.PositiveIntegerField()),
                ('to_object_id', models.PositiveIntegerField()),
                ('from_date', models.DateField()),
                ('thru_date', models.DateField()),
                ('connection_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='starseed.connectiontype')),
                ('from_content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_this', to='contenttypes.contenttype')),
                ('to_content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_that', to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='BusinessDataPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_datapoint_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='starseed.businessdatapointtype')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='starseed.entity')),
            ],
        ),
    ]
